@model MicroservicesVisualizer.Models.Inventory.InventoryDto
@{
    ViewData["Title"] = "Inventory Details";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Inventory Details</h1>
        <div>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Inventory Information</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">ID</dt>
                        <dd class="col-sm-8">@Model.Id</dd>

                        <dt class="col-sm-4">Product</dt>
                        <dd class="col-sm-8">@Model.ProductName (#@Model.ProductId)</dd>

                        <dt class="col-sm-4">Location</dt>
                        <dd class="col-sm-8">@Model.LocationName (#@Model.LocationId)</dd>

                        <dt class="col-sm-4">Quantity</dt>
                        <dd class="col-sm-8">
                            <span class="badge rounded-pill bg-@(Model.Quantity <= 5 ? "warning" : Model.Quantity == 0 ? "danger" : "success")">
                                @Model.Quantity
                            </span>
                        </dd>

                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            <span class="badge rounded-pill bg-@(Model.IsActive ? "success" : "secondary")">
                                @(Model.IsActive ? "Active" : "Inactive")
                            </span>
                        </dd>

                        <dt class="col-sm-4">Created</dt>
                        <dd class="col-sm-8">@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")</dd>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <dt class="col-sm-4">Last Updated</dt>
                            <dd class="col-sm-8">@Model.UpdatedAt.Value.ToString("yyyy-MM-dd HH:mm")</dd>
                        }
                    </dl>
                </div>
                <div class="card-footer">
                    <div class="btn-group" role="group">
                        <a asp-action="AddStock" asp-route-id="@Model.Id" class="btn btn-success">
                            <i class="bi bi-plus-circle"></i> Add Stock
                        </a>
                        <a asp-action="RemoveStock" asp-route-id="@Model.Id" class="btn btn-danger">
                            <i class="bi bi-dash-circle"></i> Remove Stock
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">Recent Transactions</h5>
                </div>
                <div class="card-body p-0">
                    @if (ViewBag.Transactions == null || !ViewBag.Transactions.Any())
                    {
                        <div class="alert alert-info m-3" role="alert">
                            No transactions found for this inventory item.
                        </div>
                    }
                    else
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var transaction in ViewBag.Transactions)
                            {
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">
                                                <span class="badge bg-@(transaction.Type == MicroservicesVisualizer.Models.Inventory.TransactionType.StockIn ? "success" :
                                                    transaction.Type == MicroservicesVisualizer.Models.Inventory.TransactionType.StockOut ? "danger" :
                                                    transaction.Type == MicroservicesVisualizer.Models.Inventory.TransactionType.Adjustment ? "warning" : "info")">
                                                    @transaction.Type
                                                </span>
                                            </h6>
                                            <small class="text-muted">@transaction.TransactionDate.ToString("yyyy-MM-dd HH:mm")</small>
                                        </div>
                                        <div class="text-end">
                                            <div>
                                                @(transaction.Type == MicroservicesVisualizer.Models.Inventory.TransactionType.StockIn ? "+" :
                                                    transaction.Type == MicroservicesVisualizer.Models.Inventory.TransactionType.StockOut ? "-" : "")@transaction.Quantity
                                            </div>
                                            <small>@transaction.Reference</small>
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(transaction.Notes))
                                    {
                                        <div class="mt-2">
                                            <small>@transaction.Notes</small>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/inventory-notifications.js"></script>
}