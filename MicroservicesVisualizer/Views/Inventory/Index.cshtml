@model IEnumerable<MicroservicesVisualizer.Models.Inventory.InventoryDto>
@{
    ViewData["Title"] = "Inventory";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Inventory Items</h1>
        <div>
            <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#searchModal">
                <i class="bi bi-search"></i> Search
            </button>
            <a asp-action="LowStock" class="btn btn-warning">
                <i class="bi bi-exclamation-triangle"></i> Low Stock
            </a>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info" role="alert">
            No inventory items found.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Product</th>
                        <th>Location</th>
                        <th>Quantity</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="@(item.Quantity <= 5 ? "low-stock" : item.Quantity == 0 ? "no-stock" : "")">
                            <td>@item.Id</td>
                            <td>@item.ProductName (#@item.ProductId)</td>
                            <td>@item.LocationName</td>
                            <td>@item.Quantity</td>
                            <td>
                                <span class="badge rounded-pill bg-@(item.IsActive ? "success" : "secondary")">
                                    @(item.IsActive ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary">
                                        <i class="bi bi-info-circle"></i>
                                    </a>
                                    <a asp-action="AddStock" asp-route-id="@item.Id" class="btn btn-outline-success">
                                        <i class="bi bi-plus-circle"></i>
                                    </a>
                                    <a asp-action="RemoveStock" asp-route-id="@item.Id" class="btn btn-outline-danger">
                                        <i class="bi bi-dash-circle"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- Search Modal -->
<div class="modal fade" id="searchModal" tabindex="-1" aria-labelledby="searchModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="searchModalLabel">Search Inventory</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Search" method="get">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="productId" class="form-label">Product ID</label>
                        <input type="number" class="form-control" id="productId" name="productId" min="1" value="@ViewBag.ProductId">
                    </div>
                    <div class="mb-3">
                        <label for="locationId" class="form-label">Location ID</label>
                        <input type="number" class="form-control" id="locationId" name="locationId" min="1" value="@ViewBag.LocationId">
                    </div>
                    <div class="mb-3">
                        <label for="minQuantity" class="form-label">Minimum Quantity</label>
                        <input type="number" class="form-control" id="minQuantity" name="minQuantity" min="0" value="@ViewBag.MinQuantity">
                    </div>
                    <div class="mb-3">
                        <label for="maxQuantity" class="form-label">Maximum Quantity</label>
                        <input type="number" class="form-control" id="maxQuantity" name="maxQuantity" min="0" value="@ViewBag.MaxQuantity">
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="isActive" name="isActive" value="true" @(ViewBag.IsActive == true ? "checked" : "")>
                        <label class="form-check-label" for="isActive">Active Only</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/inventory-notifications.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Show an alert for low stock items
            const lowStockItems = document.querySelectorAll('.low-stock').length;
            if (lowStockItems > 0) {
                showNotification('Low Stock Alert', `${lowStockItems} items have low stock levels.`, 'warning');
            }
        });
    </script>
}